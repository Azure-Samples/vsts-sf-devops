{
    "options": [{
        "enabled": false,
        "definition": {
            "id": "5d58cc01-7c75-450c-be18-a388ddb129ec"
        },
        "inputs": {
            "branchFilters": "[\"+refs/heads/*\"]",
            "additionalFields": "{}"
        }
    }, {
        "enabled": false,
        "definition": {
            "id": "a9db38f9-9fdc-478c-b0f9-464221e58316"
        },
        "inputs": {
            "workItemType": "894163",
            "assignToRequestor": "true",
            "additionalFields": "{}"
        }
    }],
    "triggers": [{
        "branchFilters": ["+master"],
        "pathFilters": [],
        "batchChanges": false,
        "maxConcurrentBuildsPerBranch": 1,
        "pollingInterval": 0,
        "triggerType": 2
    }, {
        "branchFilters": ["+4.7.1-windowsservercore-1709"],
        "forks": {},
        "triggerType": 64
    }],
    "variables": {
        "BuildConfiguration": {
            "value": "Release",
            "allowOverride": true
        },
        "BuildPlatform": {
            "value": "Any CPU"
        },
        "ContainerRepoName": {
            "value": "oguzp-sftest"
        },
        "DockerHubName": {
            "value": "oguzpastirmaci"
        },
        "SFImageName": {
            "value": "$(DockerHubName)/$(ContainerRepoName):$(Build.BuildNumber)"
        },
        "system.debug": {
            "value": "false",
            "allowOverride": true
        }
    },
    "retentionRules": [{
        "branches": ["+refs/heads/*"],
        "artifacts": [],
        "artifactTypesToDelete": ["FilePath", "SymbolStore"],
        "daysToKeep": 10,
        "minimumToKeep": 1,
        "deleteBuildRecord": true,
        "deleteTestResults": true
    }],
    "properties": {},
    "tags": [],
    "metrics": [{
        "name": "CurrentBuildsInQueue",
        "scope": "refs/heads/master",
        "intValue": 0
    }, {
        "name": "CurrentBuildsInProgress",
        "scope": "refs/heads/master",
        "intValue": 0
    }, {
        "name": "CanceledBuilds",
        "scope": "refs/heads/master",
        "intValue": 0,
        "date": "2018-05-17T00:00:00.000Z"
    }, {
        "name": "FailedBuilds",
        "scope": "refs/heads/master",
        "intValue": 0,
        "date": "2018-05-17T00:00:00.000Z"
    }, {
        "name": "PartiallySuccessfulBuilds",
        "scope": "refs/heads/master",
        "intValue": 0,
        "date": "2018-05-17T00:00:00.000Z"
    }, {
        "name": "SuccessfulBuilds",
        "scope": "refs/heads/master",
        "intValue": 3,
        "date": "2018-05-17T00:00:00.000Z"
    }, {
        "name": "TotalBuilds",
        "scope": "refs/heads/master",
        "intValue": 3,
        "date": "2018-05-17T00:00:00.000Z"
    }, {
        "name": "CanceledBuilds",
        "scope": "refs/heads/master",
        "intValue": 0,
        "date": "2018-05-16T00:00:00.000Z"
    }, {
        "name": "FailedBuilds",
        "scope": "refs/heads/master",
        "intValue": 0,
        "date": "2018-05-16T00:00:00.000Z"
    }, {
        "name": "PartiallySuccessfulBuilds",
        "scope": "refs/heads/master",
        "intValue": 0,
        "date": "2018-05-16T00:00:00.000Z"
    }, {
        "name": "SuccessfulBuilds",
        "scope": "refs/heads/master",
        "intValue": 10,
        "date": "2018-05-16T00:00:00.000Z"
    }, {
        "name": "TotalBuilds",
        "scope": "refs/heads/master",
        "intValue": 10,
        "date": "2018-05-16T00:00:00.000Z"
    }],
    "_links": {
        "self": {
            "href": "https://oguzp-msft.visualstudio.com/24d566dd-c3f2-4169-81d5-fba94d4af622/_apis/build/Definitions/34?revision=11"
        },
        "web": {
            "href": "https://oguzp-msft.visualstudio.com/24d566dd-c3f2-4169-81d5-fba94d4af622/_build/definition?definitionId=34"
        },
        "editor": {
            "href": "https://oguzp-msft.visualstudio.com/24d566dd-c3f2-4169-81d5-fba94d4af622/_build/designer?id=34&_a=edit-build-definition"
        },
        "badge": {
            "href": "https://oguzp-msft.visualstudio.com/_apis/public/build/definitions/24d566dd-c3f2-4169-81d5-fba94d4af622/34/badge"
        }
    },
    "buildNumberFormat": "$(date:yyyyMMdd)$(rev:.r)",
    "jobAuthorizationScope": 1,
    "jobTimeoutInMinutes": 60,
    "jobCancelTimeoutInMinutes": 5,
    "badgeEnabled": true,
    "process": {
        "phases": [{
            "steps": [{
                "environment": {},
                "enabled": true,
                "continueOnError": false,
                "alwaysRun": false,
                "displayName": "Use NuGet 4.4.1",
                "timeoutInMinutes": 0,
                "task": {
                    "id": "2c65196a-54fd-4a02-9be8-d9d1837b7c5d",
                    "versionSpec": "0.*",
                    "definitionType": "task"
                },
                "inputs": {
                    "versionSpec": "4.4.1",
                    "checkLatest": "false"
                }
            }, {
                "environment": {},
                "enabled": true,
                "continueOnError": false,
                "alwaysRun": false,
                "displayName": "NuGet restore",
                "timeoutInMinutes": 0,
                "task": {
                    "id": "333b11bd-d341-40d9-afcf-b32d5ce6f23b",
                    "versionSpec": "2.*",
                    "definitionType": "task"
                },
                "inputs": {
                    "command": "restore",
                    "solution": "**\\*.sln",
                    "selectOrConfig": "select",
                    "feedRestore": "",
                    "includeNuGetOrg": "true",
                    "nugetConfigPath": "",
                    "externalEndpoints": "",
                    "noCache": "false",
                    "disableParallelProcessing": "false",
                    "packagesDirectory": "",
                    "verbosityRestore": "Detailed",
                    "searchPatternPush": "$(Build.ArtifactStagingDirectory)/**/*.nupkg;!$(Build.ArtifactStagingDirectory)/**/*.symbols.nupkg",
                    "nuGetFeedType": "internal",
                    "feedPublish": "",
                    "allowPackageConflicts": "false",
                    "externalEndpoint": "",
                    "verbosityPush": "Detailed",
                    "searchPatternPack": "**/*.csproj",
                    "configurationToPack": "$(BuildConfiguration)",
                    "outputDir": "$(Build.ArtifactStagingDirectory)",
                    "versioningScheme": "off",
                    "includeReferencedProjects": "false",
                    "versionEnvVar": "",
                    "requestedMajorVersion": "1",
                    "requestedMinorVersion": "0",
                    "requestedPatchVersion": "0",
                    "packTimezone": "utc",
                    "includeSymbols": "false",
                    "toolPackage": "false",
                    "buildProperties": "",
                    "basePath": "",
                    "verbosityPack": "Detailed",
                    "arguments": ""
                }
            }, {
                "environment": {},
                "enabled": true,
                "continueOnError": false,
                "alwaysRun": false,
                "displayName": "Prepare analysis on SonarQube",
                "timeoutInMinutes": 0,
                "condition": "succeeded()",
                "task": {
                    "id": "15b84ca1-b62f-4a2a-a403-89b77a063157",
                    "versionSpec": "4.*",
                    "definitionType": "task"
                },
                "inputs": {
                    "SonarQube": "b0b991ee-f13d-4837-b06a-43368bd01213",
                    "scannerMode": "MSBuild",
                    "configMode": "file",
                    "configFile": "sonar-project.properties",
                    "cliProjectKey": "",
                    "projectKey": "sonar1.gep",
                    "cliProjectName": "",
                    "projectName": "",
                    "cliProjectVersion": "1.0",
                    "projectVersion": "1.0",
                    "cliSources": ".",
                    "extraProperties": "# Additional properties that will be passed to the scanner, \n# Put one key=value per line, example:\n# sonar.exclusions=**/*.bin\nsonar.organization=oguzpastirmaci-github\nsonar.cs.vscoveragexml.reportsPaths=**/*.coveragexml"
                }
            }, {
                "environment": {},
                "enabled": true,
                "continueOnError": false,
                "alwaysRun": false,
                "displayName": "Build solution src/TestBuild/vsts-sf-devops.sln",
                "timeoutInMinutes": 0,
                "task": {
                    "id": "71a9a2d3-a98a-4caa-96ab-affca411ecda",
                    "versionSpec": "1.*",
                    "definitionType": "task"
                },
                "inputs": {
                    "solution": "src/TestBuild/vsts-sf-devops.sln",
                    "vsVersion": "latest",
                    "msbuildArgs": "/p:Deterministic=true /p:OutputPath=$(build.artifactstagingdirectory)/content",
                    "platform": "$(BuildPlatform)",
                    "configuration": "$(BuildConfiguration)",
                    "clean": "true",
                    "maximumCpuCount": "false",
                    "restoreNugetPackages": "false",
                    "msbuildArchitecture": "x86",
                    "logProjectEvents": "true",
                    "createLogFile": "false"
                }
            }, {
                "environment": {},
                "enabled": true,
                "continueOnError": false,
                "alwaysRun": false,
                "displayName": "Build solution src/TestBuild/SampleApplication/SampleApplication.sfproj",
                "timeoutInMinutes": 0,
                "condition": "succeeded()",
                "task": {
                    "id": "71a9a2d3-a98a-4caa-96ab-affca411ecda",
                    "versionSpec": "1.*",
                    "definitionType": "task"
                },
                "inputs": {
                    "solution": "src/TestBuild/SampleApplication/SampleApplication.sfproj",
                    "vsVersion": "latest",
                    "msbuildArgs": "/t:Package /p:PackageLocation=$(build.artifactstagingdirectory)\\applicationpackage",
                    "platform": "$(BuildPlatform)",
                    "configuration": "$(BuildConfiguration)",
                    "clean": "true",
                    "maximumCpuCount": "false",
                    "restoreNugetPackages": "false",
                    "msbuildArchitecture": "x86",
                    "logProjectEvents": "true",
                    "createLogFile": "false"
                }
            }, {
                "environment": {},
                "enabled": true,
                "continueOnError": true,
                "alwaysRun": false,
                "displayName": "Unit Tests",
                "timeoutInMinutes": 0,
                "condition": "succeeded()",
                "task": {
                    "id": "ef087383-ee5e-42c7-9a53-ab56c98420f9",
                    "versionSpec": "2.*",
                    "definitionType": "task"
                },
                "inputs": {
                    "testSelector": "testAssemblies",
                    "testAssemblyVer2": "**\\*test*.dll\n!**\\*TestAdapter.dll\n!**\\obj\\**",
                    "testPlan": "",
                    "testSuite": "",
                    "testConfiguration": "",
                    "tcmTestRun": "$(test.RunId)",
                    "searchFolder": "$(System.DefaultWorkingDirectory)",
                    "testFiltercriteria": "",
                    "runOnlyImpactedTests": "False",
                    "runAllTestsAfterXBuilds": "50",
                    "uiTests": "false",
                    "vstestLocationMethod": "version",
                    "vsTestVersion": "latest",
                    "vstestLocation": "",
                    "runSettingsFile": "",
                    "overrideTestrunParameters": "",
                    "pathtoCustomTestAdapters": "",
                    "runInParallel": "False",
                    "runTestsInIsolation": "False",
                    "codeCoverageEnabled": "true",
                    "otherConsoleOptions": "",
                    "distributionBatchType": "basedOnTestCases",
                    "batchingBasedOnAgentsOption": "autoBatchSize",
                    "customBatchSizeValue": "10",
                    "batchingBasedOnExecutionTimeOption": "autoBatchSize",
                    "customRunTimePerBatchValue": "60",
                    "dontDistribute": "False",
                    "testRunTitle": "TestBuildTest",
                    "platform": "$(BuildPlatform)",
                    "configuration": "$(BuildConfiguration)",
                    "publishRunAttachments": "true",
                    "rerunFailedTests": "False",
                    "rerunType": "basedOnTestFailurePercentage",
                    "rerunFailedThreshold": "30",
                    "rerunFailedTestCasesMaxLimit": "5",
                    "rerunMaxAttempts": "3"
                }
            }, {
                "environment": {},
                "enabled": true,
                "continueOnError": false,
                "alwaysRun": false,
                "displayName": "Run Code Analysis",
                "timeoutInMinutes": 0,
                "condition": "succeeded()",
                "task": {
                    "id": "6d01813a-9589-4b15-8491-8164aeb38055",
                    "versionSpec": "4.*",
                    "definitionType": "task"
                },
                "inputs": {}
            }, {
                "environment": {},
                "enabled": true,
                "continueOnError": false,
                "alwaysRun": false,
                "displayName": "Publish Test Results **\\TEST-*.xml",
                "timeoutInMinutes": 0,
                "condition": "succeeded()",
                "task": {
                    "id": "0b0f01ed-7dde-43ff-9cbb-e48954daf9b1",
                    "versionSpec": "2.*",
                    "definitionType": "task"
                },
                "inputs": {
                    "testRunner": "VSTest",
                    "testResultsFiles": "**\\TEST-*.xml",
                    "searchFolder": "$(System.DefaultWorkingDirectory)",
                    "mergeTestResults": "false",
                    "testRunTitle": "TestBuildTest",
                    "platform": "",
                    "configuration": "",
                    "publishRunAttachments": "true"
                }
            }, {
                "environment": {},
                "enabled": true,
                "continueOnError": false,
                "alwaysRun": false,
                "displayName": "Add BuildNumber to web.config",
                "timeoutInMinutes": 0,
                "condition": "succeeded()",
                "task": {
                    "id": "e213ff0f-5d5c-4791-802d-52ea3e7be1f1",
                    "versionSpec": "1.*",
                    "definitionType": "task"
                },
                "inputs": {
                    "scriptType": "filePath",
                    "scriptName": "scripts/addBuildNumber.ps1",
                    "arguments": "",
                    "workingFolder": "",
                    "inlineScript": "# You can write your powershell scripts inline here. \n# You can also pass predefined and custom variables to this scripts using arguments\n\n Write-Host \"Hello World\"",
                    "failOnStandardError": "true"
                }
            }, {
                "environment": {},
                "enabled": true,
                "continueOnError": false,
                "alwaysRun": false,
                "displayName": "Build an image",
                "timeoutInMinutes": 0,
                "condition": "succeeded()",
                "task": {
                    "id": "e28912f1-0114-4464-802a-a3a35437fd16",
                    "versionSpec": "0.*",
                    "definitionType": "task"
                },
                "inputs": {
                    "containerregistrytype": "Container Registry",
                    "dockerRegistryEndpoint": "bf43d310-0c58-4436-ac47-01102d501f32",
                    "azureSubscriptionEndpoint": "",
                    "azureContainerRegistry": "",
                    "action": "Build an image",
                    "dockerFile": "src/TestBuild/WebApplication1/dockerfile",
                    "buildArguments": "",
                    "defaultContext": "false",
                    "context": "$(build.artifactstagingdirectory)\\content\\_PublishedWebsites\\WebApplication1",
                    "imageName": "oguzpastirmaci/oguzp-sftest:$(Build.BuildNumber)",
                    "imageNamesPath": "",
                    "qualifyImageName": "true",
                    "additionalImageTags": "",
                    "includeSourceTags": "true",
                    "includeLatestTag": "false",
                    "imageDigestFile": "",
                    "containerName": "",
                    "ports": "",
                    "volumes": "",
                    "envVars": "",
                    "workDir": "",
                    "entrypoint": "",
                    "containerCommand": "",
                    "detached": "true",
                    "restartPolicy": "no",
                    "restartMaxRetries": "",
                    "customCommand": "",
                    "dockerHostEndpoint": "",
                    "enforceDockerNamingConvention": "true",
                    "cwd": "$(System.DefaultWorkingDirectory)",
                    "memory": ""
                }
            }, {
                "environment": {},
                "enabled": true,
                "continueOnError": false,
                "alwaysRun": false,
                "displayName": "Push an image",
                "timeoutInMinutes": 0,
                "condition": "succeeded()",
                "task": {
                    "id": "e28912f1-0114-4464-802a-a3a35437fd16",
                    "versionSpec": "0.*",
                    "definitionType": "task"
                },
                "inputs": {
                    "containerregistrytype": "Container Registry",
                    "dockerRegistryEndpoint": "bf43d310-0c58-4436-ac47-01102d501f32",
                    "azureSubscriptionEndpoint": "",
                    "azureContainerRegistry": "",
                    "action": "Push an image",
                    "dockerFile": "**/Dockerfile",
                    "buildArguments": "",
                    "defaultContext": "true",
                    "context": "",
                    "imageName": "$(DockerHubName)/oguzp-sftest:$(Build.BuildNumber)",
                    "imageNamesPath": "",
                    "qualifyImageName": "true",
                    "additionalImageTags": "",
                    "includeSourceTags": "true",
                    "includeLatestTag": "false",
                    "imageDigestFile": "",
                    "containerName": "",
                    "ports": "",
                    "volumes": "",
                    "envVars": "",
                    "workDir": "",
                    "entrypoint": "",
                    "containerCommand": "",
                    "detached": "true",
                    "restartPolicy": "no",
                    "restartMaxRetries": "",
                    "customCommand": "",
                    "dockerHostEndpoint": "",
                    "enforceDockerNamingConvention": "true",
                    "cwd": "$(System.DefaultWorkingDirectory)",
                    "memory": ""
                }
            }, {
                "environment": {},
                "enabled": true,
                "continueOnError": false,
                "alwaysRun": false,
                "displayName": "Update Service Fabric Manifests (Manifest versions)",
                "timeoutInMinutes": 0,
                "condition": "succeeded()",
                "task": {
                    "id": "97ef6e59-b8cc-48aa-9937-1a01e35e7584",
                    "versionSpec": "2.*",
                    "definitionType": "task"
                },
                "inputs": {
                    "updateType": "Manifest versions",
                    "applicationPackagePath": "$(build.artifactstagingdirectory)\\applicationpackage",
                    "versionSuffix": "$(Build.BuildNumber)",
                    "versionBehavior": "Append",
                    "updateOnlyChanged": "false",
                    "pkgArtifactName": "",
                    "logAllChanges": "true",
                    "compareType": "LastSuccessful",
                    "buildNumber": "",
                    "overwriteExistingPkgArtifact": "true",
                    "imageDigestsPath": ""
                }
            }, {
                "environment": {},
                "enabled": true,
                "continueOnError": false,
                "alwaysRun": false,
                "displayName": "Update Container Image",
                "timeoutInMinutes": 0,
                "condition": "succeeded()",
                "task": {
                    "id": "e213ff0f-5d5c-4791-802d-52ea3e7be1f1",
                    "versionSpec": "1.*",
                    "definitionType": "task"
                },
                "inputs": {
                    "scriptType": "filePath",
                    "scriptName": "scripts/updateContainerImage.ps1",
                    "arguments": "",
                    "workingFolder": "",
                    "inlineScript": "# You can write your powershell scripts inline here. \n# You can also pass predefined and custom variables to this scripts using arguments\n\n Write-Host \"Hello World\"",
                    "failOnStandardError": "true"
                }
            }, {
                "environment": {},
                "enabled": true,
                "continueOnError": false,
                "alwaysRun": false,
                "displayName": "Publish Quality Gate Result",
                "timeoutInMinutes": 0,
                "condition": "succeeded()",
                "task": {
                    "id": "291ed61f-1ee4-45d3-b1b0-bf822d9095ef",
                    "versionSpec": "4.*",
                    "definitionType": "task"
                },
                "inputs": {
                    "pollingTimeoutSec": "300"
                }
            }, {
                "environment": {},
                "enabled": true,
                "continueOnError": false,
                "alwaysRun": false,
                "displayName": "Copy Files to: $(Build.ArtifactStagingDirectory)",
                "timeoutInMinutes": 0,
                "task": {
                    "id": "5bfb729a-a7c8-4a78-a7c3-8d717bb7c13c",
                    "versionSpec": "2.*",
                    "definitionType": "task"
                },
                "inputs": {
                    "SourceFolder": "",
                    "Contents": "$(build.artifactstagingdirectory)\\applicationpackage\n**\\ApplicationParameters\\**\n**\\PublishProfiles\\**\n$(build.artifactstagingdirectory)\\content\\_PublishedWebsites\\WebApplication1\n",
                    "TargetFolder": "$(Build.ArtifactStagingDirectory)",
                    "CleanTargetFolder": "false",
                    "OverWrite": "false",
                    "flattenFolders": "false"
                }
            }, {
                "environment": {},
                "enabled": true,
                "continueOnError": false,
                "alwaysRun": false,
                "displayName": "Publish Artifact: GePApplication",
                "timeoutInMinutes": 0,
                "task": {
                    "id": "2ff763a7-ce83-4e1f-bc89-0ae63477cebe",
                    "versionSpec": "1.*",
                    "definitionType": "task"
                },
                "inputs": {
                    "PathtoPublish": "$(Build.ArtifactStagingDirectory)",
                    "ArtifactName": "GePApplication",
                    "ArtifactType": "Container",
                    "TargetPath": "\\\\my\\share\\$(Build.DefinitionName)\\$(Build.BuildNumber)",
                    "Parallel": "false",
                    "ParallelCount": "8"
                }
            }],
            "name": "Phase 1",
            "refName": "Phase_1",
            "condition": "succeeded()",
            "target": {
                "executionOptions": {
                    "type": 0
                },
                "allowScriptsAuthAccessOption": false,
                "type": 1
            },
            "jobAuthorizationScope": "projectCollection",
            "jobCancelTimeoutInMinutes": 1
        }],
        "type": 1
    },
    "repository": {
        "properties": {
            "apiUrl": "https://api.github.com/repos/Azure-Samples/vsts-sf-devops",
            "branchesUrl": "https://api.github.com/repos/Azure-Samples/vsts-sf-devops/branches",
            "cloneUrl": "https://github.com/Azure-Samples/vsts-sf-devops.git",
            "fullName": "Azure-Samples/vsts-sf-devops",
            "manageUrl": "https://github.com/Azure-Samples/vsts-sf-devops",
            "refsUrl": "https://api.github.com/repos/Azure-Samples/vsts-sf-devops/git/refs",
            "defaultBranch": "master",
            "connectedServiceId": "f96fac7e-fccf-4600-b0d2-3252875a585c",
            "isPrivate": "False",
            "checkoutNestedSubmodules": "false",
            "cleanOptions": "0",
            "fetchDepth": "0",
            "gitLfsSupport": "false",
            "reportBuildStatus": "true",
            "skipSyncSource": "false",
            "labelSourcesFormat": "$(build.buildNumber)",
            "labelSources": "0"
        },
        "id": "Azure-Samples/vsts-sf-devops",
        "type": "GitHub",
        "name": "Azure-Samples/vsts-sf-devops",
        "url": "https://github.com/Azure-Samples/vsts-sf-devops.git",
        "defaultBranch": "master",
        "clean": "false",
        "checkoutSubmodules": false
    },
    "processParameters": {
        "dataSourceBindings": [{
            "dataSourceName": "AzureRMContainerRegistries",
            "parameters": {},
            "endpointId": "$(azureSubscriptionEndpoint)",
            "target": "azureContainerRegistry",
            "resultTemplate": "{\"Value\":\"{\\\"loginServer\\\":\\\"{{{properties.loginServer}}}\\\", \\\"id\\\" : \\\"{{{id}}}\\\"}\",\"DisplayValue\":\"{{{name}}}\"}"
        }]
    },
    "quality": 1,
    "authoredBy": {
        "displayName": "Richard Guthrie",
        "url": "https://app.vssps.visualstudio.com/Aac06e665-9814-435d-9755-c373663f399f/_apis/Identities/bbf81b48-69ab-47cb-bc77-286aa18d840c",
        "_links": {
            "avatar": {
                "href": "https://oguzp-msft.visualstudio.com/_apis/GraphProfile/MemberAvatars/aad.NTQ0MWY3OGUtM2Y1ZC03ZTYzLWE4Y2EtYmJiYzJmM2JhMjk5"
            }
        },
        "id": "bbf81b48-69ab-47cb-bc77-286aa18d840c",
        "uniqueName": "rguthrie@microsoft.com",
        "imageUrl": "https://oguzp-msft.visualstudio.com/_api/_common/identityImage?id=bbf81b48-69ab-47cb-bc77-286aa18d840c",
        "descriptor": "aad.NTQ0MWY3OGUtM2Y1ZC03ZTYzLWE4Y2EtYmJiYzJmM2JhMjk5"
    },
    "drafts": [],
    "queue": {
        "_links": {
            "self": {
                "href": "https://oguzp-msft.visualstudio.com/_apis/build/Queues/104"
            }
        },
        "id": 104,
        "name": "gep-fabrikamfiber",
        "url": "https://oguzp-msft.visualstudio.com/_apis/build/Queues/104",
        "pool": {
            "id": 12,
            "name": "gep-fabrikamfiber"
        }
    },
    "id": 34,
    "name": "CI-Deploy Aspnet to SF",
    "url": "https://oguzp-msft.visualstudio.com/24d566dd-c3f2-4169-81d5-fba94d4af622/_apis/build/Definitions/34?revision=11",
    "uri": "vstfs:///Build/Definition/34",
    "path": "\\",
    "type": 2,
    "queueStatus": 0,
    "revision": 11,
    "createdDate": "2018-05-16T20:13:21.460Z",
    "project": {
        "id": "24d566dd-c3f2-4169-81d5-fba94d4af622",
        "name": "vsts-sf-devops",
        "url": "https://oguzp-msft.visualstudio.com/_apis/projects/24d566dd-c3f2-4169-81d5-fba94d4af622",
        "state": "wellFormed",
        "revision": 139,
        "visibility": 0
    }
}